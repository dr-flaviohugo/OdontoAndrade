---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Hero from '../components/Hero.astro';
import About from '../components/About.astro';
import Services from '../components/Services.astro';
import Testimonials from '../components/Testimonials.astro';
import Contact from '../components/Contact.astro';
import Footer from '../components/Footer.astro';
---

<Layout title="Odonto Andrade - Clínica Odontológica de Excelência em São Paulo">
	<Header />
	<main>
		<Hero />
		<About />
		<Services />
		<Testimonials />
		<Contact />
	</main>
	<Footer />
</Layout>

<style>
/* Ensure smooth scrolling for anchor links */
html {
	scroll-behavior: smooth;
}

/* Offset for fixed header when jumping to sections */
section[id] {
	scroll-margin-top: 6rem;
}

/* Global animation styles for fade-in effects */
.fade-in {
	opacity: 0;
	transform: translateY(30px);
	transition: opacity 0.8s cubic-bezier(0.4, 0, 0.2, 1), 
	            transform 0.8s cubic-bezier(0.4, 0, 0.2, 1);
}

.fade-in.visible {
	opacity: 1;
	transform: translateY(0);
}

/* Staggered animation delays for multiple elements */
.fade-in:nth-child(1) { transition-delay: 0.1s; }
.fade-in:nth-child(2) { transition-delay: 0.2s; }
.fade-in:nth-child(3) { transition-delay: 0.3s; }
.fade-in:nth-child(4) { transition-delay: 0.4s; }
.fade-in:nth-child(5) { transition-delay: 0.5s; }
.fade-in:nth-child(6) { transition-delay: 0.6s; }

/* Loading animation */
.page-loader {
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background: white;
	display: flex;
	align-items: center;
	justify-content: center;
	z-index: 9999;
	transition: opacity 0.5s ease, visibility 0.5s ease;
}

.page-loader.hidden {
	opacity: 0;
	visibility: hidden;
}

.loader-content {
	text-align: center;
}

.loader-icon {
	width: 4rem;
	height: 4rem;
	background: linear-gradient(135deg, var(--primary-color), var(--primary-light));
	border-radius: 1rem;
	display: flex;
	align-items: center;
	justify-content: center;
	color: white;
	margin: 0 auto 1rem;
	animation: pulse 2s ease-in-out infinite;
}

.loader-icon i {
	width: 2rem;
	height: 2rem;
}

.loader-text {
	color: var(--text-primary);
	font-weight: 500;
}

@keyframes pulse {
	0%, 100% {
		transform: scale(1);
		opacity: 1;
	}
	50% {
		transform: scale(1.1);
		opacity: 0.8;
	}
}

/* Focus styles for accessibility */
*:focus {
	outline: 2px solid var(--primary-color);
	outline-offset: 2px;
}

/* Skip to content link for accessibility */
.skip-link {
	position: absolute;
	top: -40px;
	left: 6px;
	background: var(--primary-color);
	color: white;
	padding: 8px;
	text-decoration: none;
	z-index: 10000;
	border-radius: 4px;
}

.skip-link:focus {
	top: 6px;
}

/* Print styles */
@media print {
	header, footer, .back-to-top {
		display: none !important;
	}
	
	main {
		margin: 0 !important;
	}
	
	* {
		background: white !important;
		color: black !important;
		box-shadow: none !important;
	}
}

/* Reduced motion for accessibility */
@media (prefers-reduced-motion: reduce) {
	*,
	*::before,
	*::after {
		animation-duration: 0.01ms !important;
		animation-iteration-count: 1 !important;
		transition-duration: 0.01ms !important;
		scroll-behavior: auto !important;
	}
	
	.fade-in {
		opacity: 1;
		transform: none;
	}
}

/* High contrast mode support */
@media (prefers-contrast: high) {
	:root {
		--primary-color: #000080;
		--text-primary: #000000;
		--text-secondary: #333333;
		--border-color: #000000;
	}
}
</style>

<script>
// Page loader
document.addEventListener('DOMContentLoaded', function() {
	// Create and show loader
	const loader = document.createElement('div');
	loader.className = 'page-loader';
	loader.innerHTML = `
		<div class="loader-content">
			<div class="loader-icon">
				<i data-lucide="smile"></i>
			</div>
			<div class="loader-text">Carregando...</div>
		</div>
	`;
	document.body.appendChild(loader);
	
	// Initialize Lucide icons in loader
	if (typeof lucide !== 'undefined') {
		lucide.createIcons();
	}
	
	// Hide loader after page is fully loaded
	window.addEventListener('load', function() {
		setTimeout(() => {
			loader.classList.add('hidden');
			setTimeout(() => {
				loader.remove();
			}, 500);
		}, 500);
	});
});

// Enhanced scroll-based animations
document.addEventListener('DOMContentLoaded', function() {
	const observerOptions = {
		threshold: 0.1,
		rootMargin: '0px 0px -50px 0px'
	};

	const observer = new IntersectionObserver((entries) => {
		entries.forEach(entry => {
			if (entry.isIntersecting) {
				entry.target.classList.add('visible');
				// Optional: Stop observing once visible
				observer.unobserve(entry.target);
			}
		});
	}, observerOptions);

	// Observe all fade-in elements
	document.querySelectorAll('.fade-in').forEach(el => {
		observer.observe(el);
	});
});

// Smooth scrolling for anchor links (fallback for older browsers)
document.addEventListener('DOMContentLoaded', function() {
	document.querySelectorAll('a[href^="#"]').forEach(anchor => {
		anchor.addEventListener('click', function (e) {
			const target = document.querySelector(this.getAttribute('href'));
			if (target) {
				e.preventDefault();
				const headerHeight = document.querySelector('.header')?.offsetHeight || 0;
				const targetPosition = target.offsetTop - headerHeight;
				
				window.scrollTo({
					top: targetPosition,
					behavior: 'smooth'
				});
			}
		});
	});
});

// Enhanced accessibility features
document.addEventListener('DOMContentLoaded', function() {
	// Add skip link
	const skipLink = document.createElement('a');
	skipLink.href = '#inicio';
	skipLink.className = 'skip-link';
	skipLink.textContent = 'Pular para o conteúdo principal';
	document.body.insertBefore(skipLink, document.body.firstChild);
	
	// Keyboard navigation for mobile menu
	document.addEventListener('keydown', function(e) {
		if (e.key === 'Escape') {
			// Close any open modals or menus
			const activeElement = document.activeElement;
			if (activeElement && activeElement.blur) {
				activeElement.blur();
			}
		}
	});
});

// Performance monitoring
window.addEventListener('load', function() {
	// Log performance metrics (for development)
	if (window.performance) {
		const loadTime = window.performance.timing.loadEventEnd - window.performance.timing.navigationStart;
		console.log(`Página carregada em ${loadTime}ms`);
	}
});

// Error handling for images
document.addEventListener('DOMContentLoaded', function() {
	document.querySelectorAll('img').forEach(img => {
		img.addEventListener('error', function() {
			this.style.display = 'none';
		});
	});
});
</script>
